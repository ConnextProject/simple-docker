/// <reference types="node" />
export declare const INDRA_SIGN_PREFIX = "\u0015Indra Signed Message:\n";
export declare const bufferify: (input: string | Uint8Array | Buffer) => Buffer;
export declare const getRandomPrivateKey: () => string;
export declare const getPublicKeyError: (value: any) => string;
export declare const isValidPublicKey: (value: any) => boolean;
export declare const getPrivateKeyError: (value: any) => string;
export declare const isValidPrivateKey: (value: any) => boolean;
export declare const getEthSignatureError: (value: any) => string;
export declare const isValidEthSignature: (value: any) => boolean;
export declare const getPublicKeyFromPrivateKey: (privateKey: string) => string;
export declare const getAddressFromPublicKey: (publicKey: string) => string;
export declare const getAddressFromPrivateKey: (privateKey: string) => string;
export declare const hashChannelMessage: (message: string) => string;
export declare const encrypt: (message: string, publicKey: string) => Promise<string>;
export declare const decrypt: (encrypted: string, privateKey: string) => Promise<string>;
export declare const signChannelMessage: (message: string, privateKey: string) => Promise<string>;
export declare const recoverAddressFromChannelMessage: (message: string, sig: string) => Promise<string>;
//# sourceMappingURL=crypto.d.ts.map