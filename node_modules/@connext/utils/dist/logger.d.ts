import { ILogger, ILoggerService } from "@connext/types";
export declare const logTime: (log: ILogger, start: number, msg: string) => void;
export declare const nullLogger: ILoggerService;
export declare class ConsoleLogger implements ILoggerService {
    private levels;
    private context;
    private log;
    level: number;
    constructor(context?: string, level?: number, log?: ILogger);
    setContext(context: string): void;
    newContext(context: string): ConsoleLogger;
    error(msg: string): void;
    warn(msg: string): void;
    info(msg: string): void;
    debug(msg: string): void;
    private print;
}
export declare class ColorfulLogger implements ILoggerService {
    private color;
    private colors;
    private context;
    private level;
    private levels;
    private id;
    constructor(context?: string, level?: number, color?: boolean, id?: string | number);
    setContext(context: string): void;
    newContext(context: string): ColorfulLogger;
    error(msg: string): void;
    warn(msg: string): void;
    info(msg: string): void;
    debug(msg: string): void;
    private print;
}
//# sourceMappingURL=logger.d.ts.map