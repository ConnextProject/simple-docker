/// <reference types="node" />
import { Signature } from './types';
import { SignResult } from '../lib/secp256k1/typings';
export declare function removeHexPrefix(hex: string): string;
export declare function addHexPrefix(hex: string): string;
export declare function utf8ToBuffer(utf8: string): Buffer;
export declare function hexToBuffer(hex: string): Buffer;
export declare function arrayToBuffer(arr: Uint8Array): Buffer;
export declare function bufferToUtf8(buf: Buffer): string;
export declare function bufferToHex(buf: Buffer, prefixed?: boolean): string;
export declare function bufferToArray(buf: Buffer): Uint8Array;
export declare function hexToUtf8(hex: string): string;
export declare function utf8ToHex(utf8: string, prefixed?: boolean): string;
export declare function numberToHex(num: number, prefixed?: boolean): string;
export declare function hexToNumber(hex: string): number;
export declare function bufferToNumber(buf: Buffer): number;
export declare function numberToBuffer(num: number): Buffer;
export declare function concatBuffers(...args: Buffer[]): Buffer;
export declare function trimLeft(data: Buffer, length: number): Buffer;
export declare function trimRight(data: Buffer, length: number): Buffer;
export declare function padString(str: string, length: number, left: boolean, padding?: string): string;
export declare function padLeft(str: string, length: number, padding?: string): string;
export declare function padRight(str: string, length: number, padding?: string): string;
export declare function isCompressed(publicKey: Buffer): boolean;
export declare function isDecompressed(publicKey: Buffer): boolean;
export declare function isPrefixed(publicKey: Buffer): boolean;
export declare function sanitizePublicKey(publicKey: Buffer): Buffer;
export declare function exportRecoveryParam(recoveryParam: number): Buffer;
export declare function importRecoveryParam(v: Buffer): number;
export declare function splitSignature(sig: Buffer): Signature;
export declare function joinSignature(sig: Signature): Buffer;
export declare function isValidDERSignature(sig: Buffer): boolean;
export declare function sanitizeRSVSignature(sig: Buffer): SignResult;
//# sourceMappingURL=util.d.ts.map