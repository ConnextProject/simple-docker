"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const aes_js_1 = __importDefault(require("aes-js"));
const randombytes_1 = __importDefault(require("randombytes"));
const hash = __importStar(require("hash.js"));
const pkcs7 = __importStar(require("./pkcs7"));
const util_1 = require("../helpers/util");
const constants_1 = require("../helpers/constants");
function fallbackRandomBytes(length) {
    return randombytes_1.default(length);
}
exports.fallbackRandomBytes = fallbackRandomBytes;
function fallbackAesEncrypt(iv, key, data) {
    return __awaiter(this, void 0, void 0, function* () {
        const aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);
        const padded = util_1.arrayToBuffer(pkcs7.pad(data));
        const encryptedBytes = aesCbc.encrypt(padded);
        return Buffer.from(encryptedBytes);
    });
}
exports.fallbackAesEncrypt = fallbackAesEncrypt;
function fallbackAesDecrypt(iv, key, data) {
    return __awaiter(this, void 0, void 0, function* () {
        const aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);
        const encryptedBytes = aesCbc.decrypt(data);
        const padded = Buffer.from(encryptedBytes);
        const result = util_1.arrayToBuffer(pkcs7.unpad(padded));
        return result;
    });
}
exports.fallbackAesDecrypt = fallbackAesDecrypt;
function fallbackCreateHmac(key, data) {
    return __awaiter(this, void 0, void 0, function* () {
        const result = hash
            .hmac(hash[constants_1.SHA256_NODE_ALGO], key)
            .update(data)
            .digest(constants_1.HEX_ENC);
        return util_1.hexToBuffer(result);
    });
}
exports.fallbackCreateHmac = fallbackCreateHmac;
function fallbackSha256(msg) {
    return __awaiter(this, void 0, void 0, function* () {
        const result = hash
            .sha256()
            .update(msg)
            .digest(constants_1.HEX_ENC);
        return util_1.hexToBuffer(result);
    });
}
exports.fallbackSha256 = fallbackSha256;
function fallbackSha512(msg) {
    return __awaiter(this, void 0, void 0, function* () {
        const result = hash
            .sha512()
            .update(msg)
            .digest(constants_1.HEX_ENC);
        return util_1.hexToBuffer(result);
    });
}
exports.fallbackSha512 = fallbackSha512;
//# sourceMappingURL=fallback.js.map